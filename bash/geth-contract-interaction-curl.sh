curl -s -H "Content-Type: application/json" -X POST --data @- http://localhost:8001 <<EOF
{"jsonrpc":"2.0","method":"web3_clientVersion","params":[],"id":67}
EOF

ACCOUNT=$(curl -s -H "Content-Type: application/json" -X POST --data @- http://localhost:8001 <<EOF | jq -r '.result[0]'
{"jsonrpc":"2.0","id":1,"method":"eth_accounts","params":[]}
EOF
)

curl -s -H "Content-Type: application/json" -X POST --data @- http://localhost:8001 <<EOF
{"jsonrpc":"2.0","id":2,"method":"personal_unlockAccount","params":["$ACCOUNT",null,null]}"
EOF

RECEIPT_HASH=$(curl -s -H "Content-Type: application/json" -X POST --data @- http://localhost:8001 <<EOF | tee /dev/fd/2 | jq -r '.result'
{
  "jsonrpc": "2.0",
  "id": 3,
  "method": "eth_sendTransaction",
  "params": [
    {
      "from": "$ACCOUNT",
      "data": "0x6060604052341561000f57600080fd5b6107378061001e6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063693ec85e14610048578063e942b5161461012557600080fd5b341561005357600080fd5b6100a3600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506101c5565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156100e95780820151818401526020810190506100ce565b50505050905090810190601f1680156101165780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b341561013057600080fd5b6101c3600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506102ec565b005b60006101cf610652565b600080846040518082805190602001908083835b60208310151561020857805182526020820191506020810190506020830392506101e3565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390209050806000015481600101808054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102db5780601f106102b0576101008083540402835291602001916102db565b820191906000526020600020905b8154815290600101906020018083116102be57829003601f168201915b505050505090509250925050915091565b600080826040518082805190602001908083835b6020831015156103255780518252602082019150602081019050602083039250610300565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000154141561052f576040805190810160405280428152602001838152506000826040518082805190602001908083835b6020831015156103af578051825260208201915060208101905060208303925061038a565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600082015181600001556020820151816001019080519060200190610408929190610666565b509050507f0d3bbc3c02da6ed436712ca1a0f626f1269df703a105f034e4637c7b10fb7ba5600142848460405180851515151581526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561048657808201518184015260208101905061046b565b50505050905090810190601f1680156104b35780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156104ec5780820151818401526020810190506104d1565b50505050905090810190601f1680156105195780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a161064e565b7f0d3bbc3c02da6ed436712ca1a0f626f1269df703a105f034e4637c7b10fb7ba5600042848460405180851515151581526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156105a957808201518184015260208101905061058e565b50505050905090810190601f1680156105d65780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561060f5780820151818401526020810190506105f4565b50505050905090810190601f16801561063c5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a15b5050565b602060405190810160405280600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106106a757805160ff19168380011785556106d5565b828001600101855582156106d5579182015b828111156106d45782518255916020019190600101906106b9565b5b5090506106e291906106e6565b5090565b61070891905b808211156107045760008160009055506001016106ec565b5090565b905600a165627a7a723058207176027723d240e9ad1b72b1097da01fd495487de683c87031bbe742915a73140029",
      "gas": "0x$(printf '%x\n' 4700000)"
    }
  ]
}
EOF
)

CONTRACT_ADDRESS=$(curl -s -H "Content-Type: application/json" -X POST --data @- http://localhost:8001 <<EOF | tee /dev/fd/2 | jq -r '.result.contractAddress'
{
  "jsonrpc": "2.0",
  "id": 4,
  "method": "eth_getTransactionReceipt",
  "params": ["$RECEIPT_HASH"]
}
EOF
)

#how to create data?
#"set(string,string)" ---> sha3(this._name).slice(0, 8) ---> e942b516
#https://github.com/ethereum/web3.js/blob/aa6a9d600daf2cf36bd2013508f6d6c43e74ffda/lib/web3/function.js
#https://solidity.readthedocs.io/en/develop/abi-spec.html#function-selector
RESULT=$(curl -s -H "Content-Type: application/json" -X POST --data @- http://localhost:8001 <<EOF | tee /dev/fd/2 | jq -r '.result'
{
  "jsonrpc": "2.0",
  "id": 5,
  "method": "eth_sendTransaction",
  "params": [
    {
      "from": "$ACCOUNT",
      "to": "$CONTRACT_ADDRESS",
      "data": "0xe942b51600000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000c456e746572707269736520310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004032636632346462613566623061333065323665383362326163356239653239653162313631653563316661373432356537333034333336323933386239383234"
    }
  ]
}
EOF
)

#how to decode the response?
curl -s -H "Content-Type: application/json" -X POST --data @- http://localhost:8001 <<EOF | tee /dev/fd/2 | jq -r '.result' | xsel -b
{"jsonrpc":"2.0","id":10,"method":"eth_call","params":[{"to":"$CONTRACT_ADDRESS","data":"0x693ec85e0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004032636632346462613566623061333065323665383362326163356239653239653162313631653563316661373432356537333034333336323933386239383234"},"latest"]}
EOF

#"Hello, world!"
#Buffer.from("Hello, world!").toString("hex"); //works
raft/geth -exec 'web3.toUtf8("0x48656c6c6f2c20776f726c64210000000000000000000000000000000000")' attach http://localhost:8001

#mist --gethpath /home/orpington/scratch/qu/raft/geth --rpc http://localhost:8001
# cd ~/scratch/qu
# for n in {1..4}
# do yes '' | /home/orpington/scratch/qu/raft/geth --datadir /home/orpington/scratch/qu/raft/cnode_data/cnode1 account import enode_id_$n
# done

